FROM php:8.2-cli-alpine

# Install system dependencies and PHP extensions
RUN apk add --no-cache \
    git \
    unzip \
    zip \
    curl \
    bash \
    make \
    && docker-php-ext-install \
    pcntl

# Install Xdebug for development (with proper dependencies)
RUN apk add --no-cache --virtual .build-deps \
    $PHPIZE_DEPS \
    linux-headers \
    && pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && apk del .build-deps

# Configure Xdebug
RUN echo "xdebug.mode=coverage,debug" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.start_with_request=yes" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.client_host=host.docker.internal" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.client_port=9003" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.discover_client_host=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Create application directory
WORKDIR /var/www/app

# Copy composer files first for better caching
COPY composer.json ./

# Install PHP dependencies (including dev dependencies)
RUN composer install --optimize-autoloader --no-interaction --ignore-platform-reqs || \
    (composer update --ignore-platform-reqs && composer install --optimize-autoloader --no-interaction --ignore-platform-reqs)

# Copy application files
COPY . .

# Make the binary executable
RUN chmod +x bin/cake-calculator

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
RUN chown -R appuser:appgroup /var/www/app
USER appuser

# Default command
CMD ["tail", "-f", "/dev/null"]
